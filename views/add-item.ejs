<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title data-translate="page-title-add">
      Add Item - Jewelry Inventory Tracker
    </title>
    <link rel="stylesheet" href="/css/style.css" />
  </head>
  <body>
    <div class="container">
      <div class="header">
        <h1 data-translate="add-item">Add Item</h1>
      </div>

      <div class="nav-links">
        <a href="/" data-translate="nav-dashboard">üè† Dashboard</a>
      </div>

      <div class="form-container">
        <form action="/add-item" method="POST" id="addItemForm">
          <div class="form-group">
            <label for="name" data-translate="inventory-number"
              >Inventory Number</label
            >
            <input
              type="text"
              id="name"
              name="name"
              required
              data-translate-placeholder="inventory-number-placeholder"
              placeholder="INV-001, INV-002, etc."
            />
          </div>

          <div class="form-group">
            <label for="type" data-translate="jewelry-type">Item Type</label>
            <select id="type" name="type" required>
              <option value="" data-translate="select-jewelry-type">
                Select type
              </option>
              <option value="Ring" data-translate="ring">Ring</option>
              <option value="Necklace" data-translate="necklace">
                Necklace
              </option>
              <option value="Bracelet" data-translate="bracelet">
                Bracelet
              </option>
              <option value="Earrings" data-translate="earrings">
                Earrings
              </option>
              <option value="Chain" data-translate="chain">Chain</option>
              <option value="Pendant" data-translate="pendant">Pendant</option>
              <option value="Other" data-translate="other">Other</option>
            </select>
          </div>

          <div class="form-group">
            <label
              for="weight"
              data-translate="weight-grams"
              data-translate="weight-grams"
              >Weight (grams)</label
            >
            <input
              type="number"
              id="weight"
              name="weight"
              step="0.01"
              min="0.01"
              required
              placeholder="5.2"
            />
          </div>

          <div class="form-group">
            <label
              for="purity"
              data-translate="gold-purity"
              data-translate="gold-purity"
              >Gold Purity (%)</label
            >
            <select
              id="purity"
              name="purity"
              required
              onchange="calculateGoldValue()"
            >
              <option value="" data-translate="select-purity">
                Select purity
              </option>
              <option value="37.5">9K (37.5%)</option>
              <option value="41.7">10K (41.7%)</option>
              <option value="58.3">14K (58.3%)</option>
              <option value="75.0">18K (75.0%)</option>
              <option value="91.7">22K (91.7%)</option>
              <option value="99.9">24K (99.9%)</option>
              <option value="custom" data-translate="custom-purity">
                Custom Purity
              </option>
            </select>
            <input
              type="number"
              id="customPurity"
              name="customPurity"
              step="0.1"
              min="0.1"
              max="100"
              style="display: none; margin-top: 10px"
              placeholder="Enter custom purity %"
              onchange="calculateGoldValue()"
            />
          </div>

          <div class="form-group">
            <label
              for="cost"
              data-translate="purchase-cost"
              data-translate="purchase-cost"
              >Purchase Cost ($)</label
            >
            <input
              type="number"
              id="cost"
              name="cost"
              step="0.01"
              min="0.01"
              required
              placeholder="e.g., 150.00"
            />
          </div>

          <div class="form-group">
            <label
              for="description"
              data-translate="item-description"
              data-translate="item-description"
              >Description</label
            >
            <textarea
              id="description"
              name="description"
              rows="3"
              data-translate-placeholder="description-placeholder"
              placeholder="Additional details about the item..."
            ></textarea>
          </div>

          <!-- Real-time Gold Value Calculation -->
          <div
            class="summary-card"
            style="margin: 30px 0; text-align: left; display: none"
            id="goldValueCard"
            data-gold-price="<%= (settings && settings.goldPricePerOunce) || 3355.3 %>"
          >
            <h3>Gold Value</h3>
            <div
              id="goldValueDetails"
              style="font-size: 1em; line-height: 1.8; margin-top: 15px"
            >
              <!-- Gold value details will be populated here -->
            </div>
          </div>

          <div class="action-buttons">
            <button
              type="submit"
              class="btn primary"
              data-translate="save-item"
            >
              Add Item
            </button>
            <a href="/" class="btn" data-translate="cancel">Cancel</a>
          </div>
        </form>
      </div>
    </div>

    <!-- Credit Line -->
    <div
      style="
        text-align: center;
        margin-top: 40px;
        padding: 20px;
        border-top: 1px solid #eee;
      "
    >
      <small style="color: #888; font-size: 12px">
        Website system created by Cristian Hernandez
      </small>
    </div>

    <script src="/js/language.js"></script>
    <script>
      // Show/hide custom purity input
      document.getElementById("purity").addEventListener("change", function () {
        const customPurity = document.getElementById("customPurity");
        if (this.value === "custom") {
          customPurity.style.display = "block";
          customPurity.required = true;
        } else {
          customPurity.style.display = "none";
          customPurity.required = false;
          calculateGoldValue();
        }
      });

      // Calculate gold value when weight or purity changes
      document
        .getElementById("weight")
        .addEventListener("input", calculateGoldValue);
      document
        .getElementById("customPurity")
        .addEventListener("input", calculateGoldValue);

      function calculateGoldValue() {
        const weight = parseFloat(document.getElementById("weight").value);
        const puritySelect = document.getElementById("purity");
        const customPurity = parseFloat(
          document.getElementById("customPurity").value
        );

        if (!weight || weight <= 0) {
          hideGoldValueCard();
          return;
        }

        let purity;
        if (puritySelect.value === "custom") {
          if (!customPurity || customPurity <= 0 || customPurity > 100) {
            hideGoldValueCard();
            return;
          }
          purity = customPurity;
        } else if (puritySelect.value) {
          purity = parseFloat(puritySelect.value);
        } else {
          hideGoldValueCard();
          return;
        }

        // Get current gold price from settings
        const currentGoldPrice =
          parseFloat(
            document
              .getElementById("goldValueCard")
              .getAttribute("data-gold-price")
          ) || 3355.3;

        // Calculate values
        const goldPricePerGram = currentGoldPrice / 31.1035; // Convert from troy ounce to gram
        const pureGoldGrams = weight * (purity / 100);

        // Market value calculation - adjust for realistic pricing
        // 14K gold typically sells for around $70-75 per gram retail
        const retailMarkup = 1.3; // 30% markup for retail pricing
        const marketValue = pureGoldGrams * goldPricePerGram * retailMarkup;

        // Get dealer value directly from Kitco prices
        const dealerValue = getDealerValue(weight, purity);

        // Calculate dealer markup percentage for display
        const dealerMarkup = dealerValue / marketValue;
        const markupPercentage = (1 - dealerMarkup) * 100;

        // Determine karat
        const karat = getKaratFromPurity(purity);

        // Display results
        const goldValueCard = document.getElementById("goldValueCard");
        const goldValueDetails = document.getElementById("goldValueDetails");

        goldValueDetails.innerHTML = `
              <strong>${weight.toFixed(2)}g ${karat} Gold</strong><br>
              Market Value: $${marketValue.toFixed(2)}<br>
              Dealer Value: $${dealerValue.toFixed(2)}
          `;

        goldValueCard.style.display = "block";
      }

      function hideGoldValueCard() {
        document.getElementById("goldValueCard").style.display = "none";
      }

      // Get dealer value using exact Kitco pricing
      function getDealerValue(weight, purity) {
        // Kitco dealer prices per gram (exact prices you provided)
        const kitcoDealerPrices = {
          37.5: 33.71, // 9K Gold
          41.7: 37.5, // 10K Gold
          50.0: 45.26, // 12K Gold
          58.3: 52.65, // 14K Gold
          66.7: 60.59, // 16K Gold
          75.0: 68.35, // 18K Gold
          87.5: 79.9, // 21K Gold
          90.0: 83.13, // 21.6K Gold Bar/Coin
          91.7: 84.61, // 22K Gold
          99.9: 87.75, // 24K Gold
        };

        // Find the closest purity match
        let closestPurity = 58.3; // Default to 14K
        let minDifference = 100;

        for (const kitcoPurity in kitcoDealerPrices) {
          const difference = Math.abs(purity - kitcoPurity);
          if (difference < minDifference) {
            minDifference = difference;
            closestPurity = kitcoPurity;
          }
        }

        // Get the Kitco dealer price for the closest purity
        const kitcoDealerPrice = kitcoDealerPrices[closestPurity];

        // Return dealer value: weight √ó Kitco dealer price (no scaling needed)
        return weight * kitcoDealerPrice;
      }

      // Karat determination based on purity
      function getKaratFromPurity(purity) {
        if (purity >= 99.0) return "24K";
        if (purity >= 90.0) return "22K";
        if (purity >= 70.0) return "18K";
        if (purity >= 55.0) return "14K";
        if (purity >= 40.0) return "10K";
        if (purity >= 35.0) return "9K";
        return "Custom";
      }

      // Form validation
      document
        .getElementById("addItemForm")
        .addEventListener("submit", function (e) {
          const weight = parseFloat(document.getElementById("weight").value);
          const purity = document.getElementById("purity").value;
          const customPurity = parseFloat(
            document.getElementById("customPurity").value
          );
          const cost = parseFloat(document.getElementById("cost").value);

          if (weight <= 0) {
            alert("Weight must be greater than 0");
            e.preventDefault();
            return;
          }

          if (
            purity === "custom" &&
            (customPurity <= 0 || customPurity > 100)
          ) {
            alert("Custom purity must be between 0.1% and 100%");
            e.preventDefault();
            return;
          }

          if (cost <= 0) {
            alert("Cost must be greater than 0");
            e.preventDefault();
            return;
          }

          // Show confirmation with calculated values
          const confirmMessage =
            LanguageManager.currentLanguage === "es"
              ? LanguageManager.translations.es["add-item-confirm"]
              : LanguageManager.translations.en["add-item-confirm"];

          if (confirm(confirmMessage)) {
            return true;
          } else {
            e.preventDefault();
          }
        });
    </script>
  </body>
</html>
